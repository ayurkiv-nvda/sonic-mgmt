- debug: 
    msg="Get the {{ target_port_name }} port MAX buffer size"
    
- name: Get buffer profile table for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 KEYS "{{ target_table }}|*{{ target_port_name }}[^0-9]*{{ target_pg }}"
  register: buffer_profile_table
        
- name: Get buffer profile for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile_table.stdout }}" profile
  register: buffer_profile
        
- fail:
    msg: "Unable to get the buffer profile for {{ target_port_name }}"
  when: buffer_profile.stdout == ""
        
- name: Parse buffer profile name
  set_fact:
    buffer_profile="{{ buffer_profile.stdout|replace('[','')|replace(']','') }}"
    
- name: Get buffer headroom size for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile }}" size
  register: buffer_headroom
        
- fail:
    msg: "Unable to get the headroom size for {{ target_port_name }}"
  when: buffer_headroom.stdout == ""
    
- name: Get buffer alpha ID for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile }}" dynamic_th
  register: dynamic_th
        
- fail:
    msg: "Unable to get the alpha for {{ target_port_name }}"
  when: dynamic_th.stdout == ""
  
- name: Calculate the alpha
  set_fact:
    buffer_alpha="{{ 2|pow(dynamic_th.stdout|int) }}"

- name: Get XON for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile }}" xon
  register: buffer_xon
  when: buffer_profile != "" and "pg_lossless" in buffer_profile

- fail:
    msg: "Unable to get the XON for {{ target_port_name }}"
  when: "'pg_lossless' in buffer_profile and buffer_xon.stdout == ''"

- name: Get XOFF for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile }}" xoff
  register: buffer_xoff
  when: buffer_profile != "" and 'pg_lossless' in buffer_profile

- fail:
    msg: "Unable to get the XOFF for {{ target_port_name }}"
  when: "'pg_lossless' in buffer_profile and buffer_xoff.stdout == ''"
    
- name: Get buffer pool profile for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_profile }}" pool
  register: buffer_pool_id
        
- name: Parse buffer pool profile name
  set_fact:
    buffer_pool_id="{{ buffer_pool_id.stdout|replace('[','')|replace(']','') }}"
    
- name: Get buffer pool size for {{ target_port_name }} port
  shell: docker exec database redis-cli -n 4 HGET "{{ buffer_pool_id }}" size
  register: buffer_pool_size
        
- fail:
    msg: "Unable to get the buffer pool size for {{ target_port_name }}"
  when: buffer_pool_size.stdout == ""
        
- name: Calculate MAX buffer size for {{ target_port_name }} port
  set_fact:
    buffer_max_size="{{ buffer_headroom.stdout|int + ((buffer_alpha|int / (buffer_alpha|int + 1)) * buffer_pool_size.stdout|int) }}"
  
- name: Get the watermark polling status before the test
  shell: redis-cli -n 4 HGET "FLEX_COUNTER_TABLE|QUEUE_WATERMARK" FLEX_COUNTER_STATUS
  register: watermark_status
