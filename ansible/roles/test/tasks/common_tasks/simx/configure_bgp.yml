- name: "Set default action (routes_action=add) if no arguments provided"
  set_fact:
    routes_action: "add"
  when: "routes_action is not defined"

- fail: msg="routes_action is provided with invalid value"
  when: "routes_action not in [ 'add', 'remove' ]"

- name: "SimX workaround: Set BGP template config facts"
  include: "roles/test/tasks/common_tasks/simx/routing_stack_helper.yml"

- block:
  - name: "SimX workaround: Check for backuped original BGP template config"
    shell: "docker exec bgp bash -c '[ -f {{ bgp_orig_config }} ] && echo 'yes' || echo 'no''"
    register: "stat_result"

  - name: "SimX workaround: Restore original BGP config"
    shell: "{{ item }}"
    become: "yes"
    with_items:
      - "docker exec bgp bash -c 'cp -f {{ bgp_orig_config }} {{ bgp_config }}'"
      - "service bgp restart"
    when: "stat_result.stdout == 'yes'"

  when: "routes_action == 'remove'"

- block:
  - name: "SimX workaround: Check for backuped SimX BGP template config"
    shell: "docker exec bgp bash -c '[ -f {{ bgp_simx_config }} ] && echo 'yes' || echo 'no''"
    register: "stat_result"

  - name: "SimX workaround: Apply SimX BGP config"
    shell: "{{ item }}"
    become: "yes"
    with_items:
      - "docker exec bgp bash -c 'cp -f {{ bgp_simx_config }} {{ bgp_config }}'"
      - "service bgp restart"
    when: "stat_result.stdout == 'yes'"

  - name: "SimX workaround: Wait for 1 minute for BGP to be stable"
    pause: minutes=1
    when: "stat_result.stdout == 'yes'"

  when: "routes_action == 'add'"
