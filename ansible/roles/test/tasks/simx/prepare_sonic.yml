- name: "Set default action (topo_action=add) if no arguments provided"
  set_fact:
    topo_action: "add"
  when: "topo_action is not defined"

- fail: msg="topo_action is provided with invalid value"
  when: "topo_action not in [ 'add', 'remove' ]"

- name: "Set BGP template config facts"
  include: "roles/test/tasks/common_tasks/simx/routing_stack_helper.yml"

- block:
  - name: "Gather minigraph facts about the device"
    minigraph_facts: host={{ inventory_hostname }}

  - name: "Set T1 topology"
    set_fact:
      testbed_type: "t1"

  - name: "Include T1 topology variables"
    include_vars: "vars/topo_t1.yml"

  - name: "Expand properties into props"
    set_fact:
      props: "{{ configuration_properties['spine'] }}"
      props_tor: "{{ configuration_properties['tor'] }}"

  - name: "Generate route-port map information"
    template:
      src: "roles/test/templates/fib.j2"
      dest: "/tmp/fib_info.txt"
    connection: "local"

  - name: "Generate FIB facts"
    fib_facts:
      fib: "/tmp/fib_info.txt"
    connection: "local"

  - name: "Generate BGP config"
    template:
      src: "roles/test/templates/simx/bgp_route_populate.conf.j2"
      dest: "/tmp/bgp_route_populate.conf"

  - name: "Check for backuped original BGP template config"
    shell: "docker exec bgp bash -c '[ -f {{ bgp_orig_config }} ] && echo 'yes' || echo 'no''"
    register: "stat_result"

  - name: "Restore original BGP template config if backup exists"
    shell: "docker exec bgp bash -c 'cp -f {{ bgp_orig_config }} {{ bgp_config }}'"
    when: "stat_result.stdout == 'yes'"

  - name: "Create original BGP template config backup if it doesn't exist"
    shell: "docker exec bgp bash -c 'cp -f {{ bgp_config }} {{ bgp_orig_config }}'"
    when: "stat_result.stdout == 'no'"

  - name: "Copy config to BGP container"
    shell: "docker cp /tmp/bgp_route_populate.conf bgp:/bgp_route_populate.conf"

  - name: "Append to existing BGP template config"
    shell: "docker exec bgp bash -c 'cat /bgp_route_populate.conf >> {{ bgp_config }}'"

  - name: "Clean up intermediate BGP config"
    shell: "docker exec bgp bash -c 'rm -f /bgp_route_populate.conf'"

  - name: "Check for backuped SimX BGP template config"
    shell: "docker exec bgp bash -c '[ -f {{ bgp_simx_config }} ] && echo 'yes' || echo 'no''"
    register: "stat_result"

  - name: "Create SimX BGP template config backup if it doesn't exist"
    shell: "docker exec bgp bash -c 'cp -f {{ bgp_config }} {{ bgp_simx_config }}'"
    when: "stat_result.stdout == 'no'"

  when: "topo_action is defined and topo_action == 'add'"

- block:
  - name: "Check for backuped original BGP template config"
    shell: "docker exec bgp bash -c '[ -f {{ bgp_orig_config }} ] && echo 'yes' || echo 'no''"
    register: "stat_result"

  - name: "Restore original BGP template config if backup exists"
    shell: "docker exec bgp bash -c 'cp -f {{ bgp_orig_config }} {{ bgp_config }}'"
    when: "stat_result.stdout == 'yes'"

  - name: "Clean up backuped BGP template config"
    shell: "{{ item }}"
    with_items:
      - "docker exec bgp bash -c 'rm -f {{ bgp_orig_config }}'"
      - "docker exec bgp bash -c 'rm -f {{ bgp_simx_config }}'"

  when: "topo_action is defined and topo_action == 'remove'"

- name: "Restart BGP docker"
  service:
    name: "bgp"
    state: "restarted"
  become: "yes"

- name: "Wait for 1 minute for BGP to be stable"
  pause: minutes=1
